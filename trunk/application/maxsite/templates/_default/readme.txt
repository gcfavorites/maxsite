Пока всё в куче, оптом отсортирую




КОМПОНЕНТЫ
----------

1. Компонент отдельный самостоятельный блок, который выводится шаблоне.
2. Компонент подключается в main.php и представляетс собой исполняемый php-файл
3. Компонент должен обладать собственными css-классами. Использование ID не приветствуется.
4. Компонент может использовать свой js. Файлы js следует размещать в шаблонном js-каталоге.
5. Компонент может подключать свои css-стили. Css-файл компонента располагается в components/css. Имя файла должно совпадать с именем компонента.
6. Компонент может создавать свои опции (ini-файл), который следует разместить в components/options. Если ini-файл использует PHP_START PHP_END, то функцию опции следует разместить в php-файле в этом же каталоге. Имя файла совпадает именем компонента. См. пример компонента image-select.



ПОРЯДОК СОЗДАНИЯ НОВОГО ШАБЛОНА
-------------------------------

Если шаблон не может быть создан в рамках _default и будет затираться при обновлении MaxSite CMS, то следует использовать отдельный каталог шаблона.

1. Создаём новый каталог для своего шаблона.
2. Копируем в него все файлы из _default, кроме каталога type.
3. Копируем в свой каталог собственные компоненты и т.п.

Если шаблон может быть сделан в рамках _default, то размещаем свои файлы в этом шаблоне.


ПРАВИЛА ИМЕНОВАНИЯ ФАЙЛОВ
-------------------------
Для того, чтобы избежать замен изменённых файлов, следует избегать совпадения имён с _default-шаблоном. Вместо этого лучше использовать предусмотренные расширения. 

Каталог custom:
	my_meta.ini - свои мета
	my_options.ini - свои опции
	my_functions.php - свои функции
	main_out_start.php - подключается в начале main
	main_out_end.php - подключается в конце main

Каталог components. Файлы:
	header-start.php
	header-end.php
	content-start.php
	footer-start.php
	footer-end.php
	- подключаются в соответствующих частях. По возможности лучше использовать обычные компоненты, вместо этих файлов. Использовать можно для сложных вариантов, когда файл должен подключаться всегда, не зависимо от выбора компонентов пользователя системы.




ОБНОВЛЕНИЕ MaxSite CMS
----------------------

При обновлении MaxSite CMS, можно скопировать в свой шаблон все файлы и каталоги, кроме main.php (если менялась структура html).



ПОДКЛЮЧЕНИЕ CSS
---------------
1. Каталог шаблона css.
2. Если есть файл css.php, то подключается он.
3. Если нет, то подключается my_style.css.
4. Если его нет, то style-all-mini.css.
5. После этого подключаются стили компонентов (components/css)
6. Подключаются выбранные css-профили (css/profiles)/
7. В завершении подключается css/add_style.css, если есть.


ТИПОВЫЕ ЗАДАЧИ
--------------

Задача: нужно изменить стили некоторых элементов шаблона.
Решение: ипользуется add_style.css. Если нужно оставить возможность возврата к стандартным стидям, делаем css-профиль, который отмечается в админ-панели.

Задача: нужно полностью использовать свои стили.
Решение: используйте my_style.css или css.php (если знаете как с ним работать).

Задача: необходимо добавить свои опции.
Решение: ипользуйте custom/my_options.ini. Если опция использует php-код, то разместите его в custom/my_options.php.

Задача: необходимо использовать свои дополнительные поля мета.
Решение: используйте файл custom/my_meta.ini.

Задача: необходимо добавить/изменить компонент.
Решение: создаём компонент. Обращаем внимание на существующие опции и функции.

Задача: необходимо изменить стили компонента.
Решение: лучше всего это сделать в своём add_style.css.

Задача: 
Решение: 

Задача:  
Решение:  

Задача: 
Решение: 
